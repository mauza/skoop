/* tslint:disable */
/* eslint-disable */
/**
 * skoop/v1/api.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  RpcStatus,
  V1DeleteResponse,
  V1Hellos,
  V1UpsertHellosRequest,
} from '../models/index';
import {
    RpcStatusFromJSON,
    RpcStatusToJSON,
    V1DeleteResponseFromJSON,
    V1DeleteResponseToJSON,
    V1HellosFromJSON,
    V1HellosToJSON,
    V1UpsertHellosRequestFromJSON,
    V1UpsertHellosRequestToJSON,
} from '../models/index';

export interface ApiDeleteHellosRequest {
    ids?: Array<string>;
}

export interface ApiGetHellosRequest {
    ids?: Array<string>;
}

export interface ApiListHellosRequest {
    limit?: number;
    offset?: number;
    orderBy?: string;
}

export interface ApiUpsertHellosRequest {
    body: V1UpsertHellosRequest;
}

/**
 * ApiApi - interface
 * 
 * @export
 * @interface ApiApiInterface
 */
export interface ApiApiInterface {
    /**
     * 
     * @param {Array<string>} [ids] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApiApiInterface
     */
    apiDeleteHellosRaw(requestParameters: ApiDeleteHellosRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V1DeleteResponse>>;

    /**
     */
    apiDeleteHellos(requestParameters: ApiDeleteHellosRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V1DeleteResponse>;

    /**
     * 
     * @param {Array<string>} [ids] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApiApiInterface
     */
    apiGetHellosRaw(requestParameters: ApiGetHellosRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V1Hellos>>;

    /**
     */
    apiGetHellos(requestParameters: ApiGetHellosRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V1Hellos>;

    /**
     * 
     * @summary Health check
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApiApiInterface
     */
    apiHealthyRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;

    /**
     * Health check
     */
    apiHealthy(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;

    /**
     * 
     * @param {number} [limit] 
     * @param {number} [offset] 
     * @param {string} [orderBy] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApiApiInterface
     */
    apiListHellosRaw(requestParameters: ApiListHellosRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V1Hellos>>;

    /**
     */
    apiListHellos(requestParameters: ApiListHellosRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V1Hellos>;

    /**
     * 
     * @summary Readiness check
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApiApiInterface
     */
    apiReadyRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;

    /**
     * Readiness check
     */
    apiReady(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;

    /**
     * 
     * @param {V1UpsertHellosRequest} body 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApiApiInterface
     */
    apiUpsertHellosRaw(requestParameters: ApiUpsertHellosRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V1Hellos>>;

    /**
     */
    apiUpsertHellos(requestParameters: ApiUpsertHellosRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V1Hellos>;

}

/**
 * 
 */
export class ApiApi extends runtime.BaseAPI implements ApiApiInterface {

    /**
     */
    async apiDeleteHellosRaw(requestParameters: ApiDeleteHellosRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V1DeleteResponse>> {
        const queryParameters: any = {};

        if (requestParameters.ids) {
            queryParameters['ids'] = requestParameters.ids;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/hellos`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V1DeleteResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiDeleteHellos(requestParameters: ApiDeleteHellosRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V1DeleteResponse> {
        const response = await this.apiDeleteHellosRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiGetHellosRaw(requestParameters: ApiGetHellosRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V1Hellos>> {
        const queryParameters: any = {};

        if (requestParameters.ids) {
            queryParameters['ids'] = requestParameters.ids;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/hellos/get`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V1HellosFromJSON(jsonValue));
    }

    /**
     */
    async apiGetHellos(requestParameters: ApiGetHellosRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V1Hellos> {
        const response = await this.apiGetHellosRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Health check
     */
    async apiHealthyRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/healthy`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Health check
     */
    async apiHealthy(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.apiHealthyRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiListHellosRaw(requestParameters: ApiListHellosRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V1Hellos>> {
        const queryParameters: any = {};

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.offset !== undefined) {
            queryParameters['offset'] = requestParameters.offset;
        }

        if (requestParameters.orderBy !== undefined) {
            queryParameters['orderBy'] = requestParameters.orderBy;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/hellos/list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V1HellosFromJSON(jsonValue));
    }

    /**
     */
    async apiListHellos(requestParameters: ApiListHellosRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V1Hellos> {
        const response = await this.apiListHellosRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Readiness check
     */
    async apiReadyRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/ready`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Readiness check
     */
    async apiReady(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.apiReadyRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiUpsertHellosRaw(requestParameters: ApiUpsertHellosRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V1Hellos>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling apiUpsertHellos.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/hellos`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: V1UpsertHellosRequestToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V1HellosFromJSON(jsonValue));
    }

    /**
     */
    async apiUpsertHellos(requestParameters: ApiUpsertHellosRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V1Hellos> {
        const response = await this.apiUpsertHellosRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
